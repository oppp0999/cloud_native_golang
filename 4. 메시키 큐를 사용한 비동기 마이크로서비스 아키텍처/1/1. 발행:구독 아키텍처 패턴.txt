1. 발행/구독 아키텍처 패턴 -> 잘 알려진 요청/응답 패턴에 대한 대안적인 통신이다.
클라이언트(요청을 발행하는)와 서버(이 요청에 대한 응답을 하는) 대신 발행/구독 아키텍처는 발행자와 구독자로 구성돼 있다.

-> 실제로 많은 발행/구독 아키텍처가 중심이 되는 인프라 구성 요소로 메시지 브로커(송신자의 메시지 프로토콜 형식으로부터의 메시지를 수신자의 메시지 프로토콜 형식으로 변환하는 중간 컴퓨터 프로그램 모듈)를 요구
브로코의 주요 업무 중 하나는 관심을 표현한 구독자들에게 발행된 메시지들을 정해진 경로로 보내는 것
일반적으로 메시지들은 토픽 기반의 경로를 따라 보냄

발행/구독 패턴의 장점
1. 발행자와 구독자는 아주 느슨한 결합 관계, 이는 이들이 서로에 대해 알지 못하는 정도까지 간다
2. 아주 유연함. 발행자를 수정하지 않고 새로운 구독자를 추가, 또한 역으로도 적용,,, -> 구독자 수정 X, 새로운 발행자 추가
3. 모든 메세지를 큐에 보관하고 이곳에서 구독자에 의해 처리되기 전까지 유지
4. 신뢰성있는 전달 보장
5. 쉬운 스케일아웃

애플리케이션이 클라우드 환경에서 실행될 때 -> 관리형 메시지 큐잉, 전달 서비스 중 하나를 사용
예를 들어 AWS SQS, Azure 서비스 버스


---------
예약 서비스 
1. 아키텍처에 새로운 마이크로서비스가 필요하고 예약 서비스는 이벤트들에 대한 예약을 처리
2. 이 서비스는행사에 대한 한도 초과 예약을 받지 않음을 확실히 하는 역할을 포함하고, 이를 위해 기존 행사와 장소들에 관해 알고 있을 필요가 있다.